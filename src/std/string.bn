import "./_string" as _string

int strcmp(str str1, str2) {
    if str1 == null | str2 == null {
        if str1 == null & str2 == null {
            return 0
        }
        return 1
    }
    return _string.strcmp(str1, str2)
}

-- like strcmp but limits the comparison at the first n characters
-- Compares up to num characters of the C string str1 to those of the C
-- string str2.
-- https://www.cplusplus.com/reference/cstring/strncmp/

extern int strncmp(chr* str1, str2, int n)

-- get string length
extern int strlen(str message)

-- catenate two strings
extern chr* strcat(chr* dest, src)
extern chr* strncat(chr* dest, src, int n)


bool is_letter(chr c) {
    return c >= 'a' & c <= 'z' | c >= 'A' & c <= 'Z'
}

bool is_digit(chr c) {
    return c >= '0' & c <= '9'
}

bool is_whitespace(chr c) {
    return c == ' ' | c == '\x09'
}


bool is_lower(chr* string) {
    for idx := 0; string[idx] != '\x00'; idx = idx + 1 {
        c := string[idx]
        if c == '_' {
        } elif c < 'a' | c > 'z' {
            return false
        }
    }
    return true
}

bool is_upper(chr* string) {
    for idx := 0; string[idx] != '\x00'; idx = idx + 1 {
        c := string[idx]
        if c == '_' {
        } elif c < 'A' | c > 'Z' {
            return false
        }
    }
    return true
}


extern chr* strcpy(chr* dest, chr* src)
extern chr* strncpy(chr* dest, chr* src, int n)

extern chr toupper(chr c)

extern chr* strstr(chr* haystack, chr* needle)
