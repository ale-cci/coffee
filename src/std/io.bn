-- Standard io operations

-- it's what you expect
-- example:
--  printf("number: %d", 3)
extern int printf(str format, ...args)
extern int sprintf(chr* dest, str format, ...args)


-- prints text + adds newline
extern int puts(str text)


-- read variables to string literal
-- example:
--  int t
--  scanf("%d", &t)
extern int scanf(str template, ...args)
extern int sscanf(chr* from, str template, ...args)


-- write extern syscall, see `man 2 write`
-- :param fd:
int STDIN = 0
int STDOUT = 1
int STDERR = 2
extern int write(int fd, str buffer, int n)


-- read syscall, see `man 2 read`
extern int read(int fd, chr* buf, int bytes_to_read)


-- close a opened file descriptor
extern int close(int fd)


-- seek location of a file,
-- :param whence:
int SEEK_SET = 0 -- set to offset
int SEEK_CUR = 1 -- current location plus offset
int SEEK_END = 2 -- file size plus offset
extern int lseek(int fd, int offset, int whence)


-- returns file descriptor of opened file
-- :param flags:
int O_RDONLY = 0
int O_WRONLY = 1
int O_RDWR = 2
int O_CREAT = 64
int O_TRUNC = 512
extern int open(str pathname, int flags)




-- file like operations
alias File = struct {
    chr*   ptr,
    int    _cnt,
    chr*   base,
    int    _flag,
    int    _file,
    int    _charbuf,
    int    _bufsiz,
    chr*   _tmpfname,
}

extern int fprintf(File* stream, chr* format, ...args)

extern File* fdopen(int fd, str mode)
extern File* fopen(chr* name, str flags)

extern int fscanf(File* stream, chr* format, ...args)

extern File* tmpfile()
extern int fseek(File* stream, int offset, int whence)


extern void sync()

extern int fflush(File* f)
extern int fsync(int fd)

-- get file descriptor from file data structure
extern int fileno(File* f)
extern int fclose(File* f)


extern void rewind(File* f)
