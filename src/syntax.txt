start: (statement)*

statement: (import | function | global | typealias | NL )

typealias: "alias" WORD "=" type

extern: "extern" type WORD "(" (type WORD)* ( ")" )

import: "import" STRING "as" WORD

global: type WORD "=" WORD

function: type "main" fn_args block

structdef: ( "struct" "{" NL ) ( type WORD "," NL | NL )* ( "}" )
type: ( "void" | "int" | "bool" | "chr" | structdef )

fn_args: ( "(" ) ( type WORD )* ( ")" )

block: "{" "}"

var_atom: WORD ( "[" atom "]" )* ( "." var_atom )?

const_atom: ( NUMBER | STRING )

atom: ( var_atom | const_atom )
