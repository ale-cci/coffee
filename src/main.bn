#!/usr/bin/env coffee
import "./std/io" as io
import "./std/sys" as sys


alias LexerState = struct {
    int line, -- current line of the file
    int pos,  -- current character of the current line

    chr* filename, -- name of the file analyzed
    int fd,        -- descriptor of the file
}

alias Token = struct {
    int type,
    chr* value,
}
alias TokenList = struct {
    Token* elems,
    int size,
}

int main(int argc, str* argv) {
--     io.printf("Compilation started...\0A")
--
--     int fd_in = io.open("main.bn", 0)
--     sys.assert(fd_in > 0, "File ./main.bn not found")
--     io.printf(argv[1])
--
--     int fd_out
--     compile(fd_in, fd_out)
    return 0
}



void compile(int fd_in, fd_out) {
    LexerState s
      s.line = 0
      s.pos = 0
      s.fd = fd_in


    chr* buf = sys.malloc(8)
    sys.free(buf)
}
