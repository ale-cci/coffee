#!/usr/bin/env coffee
import "./std/io" as io
import "./std/sys" as sys

alias Token = struct {
    int type,
    str value,
}

int main(int argc, str* argv) {
    check_args(argc, argv)

    int fd = io.open(argv[1], 0)
    sys.assert(fd > 0, "Unable to open input file\0A")
    -- read file content
    chr* buf = readfile(fd)
    io.puts(buf)

    sys.free(buf)
    io.close(fd)


    return 0
}


chr* readfile(int fd) {
    int buflen = 1024
    chr* buf = sys.malloc(8* buflen)

    read_bytes := io.read(fd, buf, buflen)
    for ; read_bytes > 0 ; read_bytes = io.read(fd, buf, buflen) {
        io.printf("%s", buf)
        sys.memset(buf, '\00', buflen)
    }
    return buf
}

-- check how the program was called, assuring at least one argument is present in argv
void check_args(int argc, str* argv) {
    if argc == 2 {
        return
    }

    tmpl := "Usage: %s <filename>"
    int len_filename = io.strlen(argv[0]) + io.strlen(tmpl)
    chr* buf = sys.malloc(len_filename)
    io.sprintf(buf, tmpl, argv[0])

    io.puts(buf)
    sys.free(buf)
    sys.exit(1)
}
