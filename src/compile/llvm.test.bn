import "../std/testing" as testing
import "./llvm" as llvm

int main() {
    t := testing.init("compile/llvm.test.bn")

    testing.setup(t, "test_ascii_strings_stay_normal")
    testing.run(t, test_ascii_strings_stay_normal(t))

    testing.setup(t, "test_converts_slash_n")
    testing.run(t, test_converts_slash_n(t))

    testing.setup(t, "test_converts_slash_N")
    testing.run(t, test_converts_slash_N(t))

    testing.setup(t, "test_converts_hex_characters_in_string")
    testing.run(t, test_converts_hex_characters_in_string(t))

    testing.setup(t, "test_escapes_slash")
    testing.run(t, test_escapes_slash(t))

    testing.setup(t, "test_escapes_char_values")
    testing.run(t, test_escapes_char_values(t))

    testing.setup(t, "test_allows_hex_in_chars")
    testing.run(t, test_allows_hex_in_chars(t))

    testing.cleanup(t)
    return 0
}

int test_ascii_strings_stay_normal(testing.T* t) {
    got := llvm.string_to_llvm(`"hello"`)
    testing.assert_equal_str(t, `c"hello\\00"`, got)
    return 0
}

int test_converts_slash_N(testing.T* t) {
    got := llvm.string_to_llvm(`"\\N"`)
    testing.assert_equal_str(t, `c"\\0A\\00"`, got)
    return 0
}

int test_converts_slash_n(testing.T* t) {
    got := llvm.string_to_llvm(`"\\n"`)
    testing.assert_equal_str(t, `c"\\0A\\00"`, got)
    return 0
}

int test_converts_hex_characters_in_string(testing.T* t) {
    got := llvm.string_to_llvm(`"\\x0a"`)
    testing.assert_equal_str(t, `c"\\0A\\00"`, got)
    return 0
}

int test_escapes_slash(testing.T* t) {
    got := llvm.string_to_llvm(`"\\\\"`)
    testing.assert_equal_str(t, `c"\\5C\\00"`, got)
    return 0
}

int test_escapes_char_values(testing.T* t) {
    got := llvm.chr_to_llvm("'\\n'")
    testing.assert_equal_str(t, "10", got)
    return 0
}

int test_allows_hex_in_chars(testing.T* t) {
    got := llvm.chr_to_llvm("'\\x0a'")
    testing.assert_equal_str(t, "10", got)
    return 0
}
